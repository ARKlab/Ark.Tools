// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using ODataSample.Models;

namespace ODataSample.Migrations
{
    [DbContext(typeof(ODataSampleContext))]
    [Migration("20190412093601_InitSample")]
    partial class InitSample
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ark.Tools.EntityFrameworkCore.SystemVersioning.Audit.Audit", b =>
                {
                    b.Property<Guid>("AuditId")
                        .ValueGeneratedOnAdd();

                    b.Property<Instant>("Timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasComputedColumnSql("[SysStartTime]");

                    b.Property<string>("UserId");

                    b.HasKey("AuditId");

                    b.ToTable("Audits");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataSample.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AuditId");

                    b.Property<string>("Author");

                    b.Property<string>("ISBN");

                    b.Property<int?>("PressId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.Property<string>("_ETag")
                        .IsConcurrencyToken();

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("PressId");

                    b.ToTable("Books");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataSample.Models.Press", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Press");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("Ark.Tools.EntityFrameworkCore.SystemVersioning.Audit.Audit", b =>
                {
                    b.OwnsMany("Ark.Tools.EntityFrameworkCore.SystemVersioning.Audit.AffectedEntity", "AffectedEntities", b1 =>
                        {
                            b1.Property<int>("EntityId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<Guid>("AuditId");

                            b1.Property<string>("EntityAction");

                            b1.Property<string>("KeyValues");

                            b1.Property<string>("TableName");

                            b1.HasKey("EntityId");

                            b1.HasIndex("AuditId");

                            b1.ToTable("AffectedEntity");

                            b1.HasOne("Ark.Tools.EntityFrameworkCore.SystemVersioning.Audit.Audit")
                                .WithMany("AffectedEntities")
                                .HasForeignKey("AuditId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ODataSample.Models.Book", b =>
                {
                    b.HasOne("Ark.Tools.EntityFrameworkCore.SystemVersioning.Audit.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ODataSample.Models.Press", "Press")
                        .WithMany()
                        .HasForeignKey("PressId");

                    b.OwnsMany("ODataSample.Models.Address", "Addresses", b1 =>
                        {
                            b1.Property<int>("BookId");

                            b1.Property<int>("Id");

                            b1.Property<string>("City");

                            b1.Property<string>("Street");

                            b1.HasKey("BookId", "Id");

                            b1.ToTable("Books_Addresses");

                            b1.HasOne("ODataSample.Models.Book")
                                .WithMany("Addresses")
                                .HasForeignKey("BookId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("ODataSample.Models.Address", "Location", b1 =>
                        {
                            b1.Property<int>("BookId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City");

                            b1.Property<string>("Street");

                            b1.HasKey("BookId");

                            b1.ToTable("Books");

                            b1.HasOne("ODataSample.Models.Book")
                                .WithOne("Location")
                                .HasForeignKey("ODataSample.Models.Address", "BookId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
