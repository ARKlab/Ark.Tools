// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ODataEntityFrameworkSample.Models;

namespace ODataEntityFrameworkSample.Migrations
{
    [DbContext(typeof(ODataSampleContext))]
    partial class ODataSampleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ark.Tools.EntityFrameworkCore.SystemVersioning.Auditing.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasComputedColumnSql("[SysStartTime]");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Audits");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AuditId");

                    b.Property<string>("Author");

                    b.Property<string>("ISBN");

                    b.Property<int?>("PressId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.Property<string>("_ETag")
                        .IsConcurrencyToken();

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("PressId");

                    b.ToTable("Books");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("Name");

                    b.Property<int?>("Population");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.PhotoStudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AuditId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("PhotoStudios");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.Press", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Press");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Schools");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.Test", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("Tests");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Universities");

                    b.HasAnnotation("SystemVersioning", true);
                });

            modelBuilder.Entity("Ark.Tools.EntityFrameworkCore.SystemVersioning.Auditing.Audit", b =>
                {
                    b.OwnsMany("Ark.Tools.EntityFrameworkCore.SystemVersioning.Auditing.AffectedEntity", "AffectedEntities", b1 =>
                        {
                            b1.Property<int>("EntityId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<Guid>("AuditId");

                            b1.Property<string>("EntityAction");

                            b1.Property<string>("KeyValues");

                            b1.Property<string>("TableName");

                            b1.HasKey("EntityId");

                            b1.HasIndex("AuditId");

                            b1.ToTable("AffectedEntity");

                            b1.HasOne("Ark.Tools.EntityFrameworkCore.SystemVersioning.Auditing.Audit")
                                .WithMany("AffectedEntities")
                                .HasForeignKey("AuditId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.Book", b =>
                {
                    b.HasOne("Ark.Tools.EntityFrameworkCore.SystemVersioning.Auditing.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ODataEntityFrameworkSample.Models.Press", "Press")
                        .WithMany()
                        .HasForeignKey("PressId");

                    b.OwnsOne("ODataEntityFrameworkSample.Models.Bibliografy", "Bibliografy", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("BookId");

                            b1.Property<string>("Name");

                            b1.HasKey("Id");

                            b1.HasIndex("BookId")
                                .IsUnique();

                            b1.ToTable("Bibliography");

                            b1.HasOne("ODataEntityFrameworkSample.Models.Book")
                                .WithOne("Bibliografy")
                                .HasForeignKey("ODataEntityFrameworkSample.Models.Bibliografy", "BookId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsMany("ODataEntityFrameworkSample.Models.Code", "Codes", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("BibliographyId");

                                    b2.Property<int>("Value");

                                    b2.HasKey("Id");

                                    b2.HasIndex("BibliographyId");

                                    b2.ToTable("Code");

                                    b2.HasOne("ODataEntityFrameworkSample.Models.Bibliografy")
                                        .WithMany("Codes")
                                        .HasForeignKey("BibliographyId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });

                    b.OwnsMany("ODataEntityFrameworkSample.Models.Address", "Addresses", b1 =>
                        {
                            b1.Property<int>("BookId");

                            b1.Property<int>("Id");

                            b1.Property<string>("City");

                            b1.Property<string>("Street");

                            b1.HasKey("BookId", "Id");

                            b1.ToTable("Books_Addresses");

                            b1.HasOne("ODataEntityFrameworkSample.Models.Book")
                                .WithMany("Addresses")
                                .HasForeignKey("BookId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("ODataEntityFrameworkSample.Models.Address", "Location", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City");

                            b1.Property<string>("Street");

                            b1.HasKey("Id");

                            b1.ToTable("Books");

                            b1.HasOne("ODataEntityFrameworkSample.Models.Book")
                                .WithOne("Location")
                                .HasForeignKey("ODataEntityFrameworkSample.Models.Address", "Id")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.City", b =>
                {
                    b.HasOne("ODataEntityFrameworkSample.Models.Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.PhotoStudio", b =>
                {
                    b.HasOne("Ark.Tools.EntityFrameworkCore.SystemVersioning.Auditing.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("ODataEntityFrameworkSample.Models.Worker", "Workers", b1 =>
                        {
                            b1.Property<string>("Name");

                            b1.Property<string>("SurName");

                            b1.Property<int>("Role");

                            b1.Property<int>("PhotoStudioId");

                            b1.Property<string>("Quality");

                            b1.HasKey("Name", "SurName", "Role");

                            b1.HasIndex("PhotoStudioId");

                            b1.ToTable("Worker");

                            b1.HasOne("ODataEntityFrameworkSample.Models.PhotoStudio")
                                .WithMany("Workers")
                                .HasForeignKey("PhotoStudioId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.School", b =>
                {
                    b.OwnsOne("ODataEntityFrameworkSample.Models.Registry", "Registry", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Name");

                            b1.Property<int>("SchoolId");

                            b1.HasKey("Id");

                            b1.HasIndex("SchoolId")
                                .IsUnique();

                            b1.ToTable("Registry");

                            b1.HasOne("ODataEntityFrameworkSample.Models.School")
                                .WithOne("Registry")
                                .HasForeignKey("ODataEntityFrameworkSample.Models.Registry", "SchoolId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsMany("ODataEntityFrameworkSample.Models.Rule", "Rules", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Name");

                                    b2.Property<int>("RuleId");

                                    b2.Property<int?>("Value");

                                    b2.HasKey("Id");

                                    b2.HasIndex("RuleId");

                                    b2.ToTable("Rule");

                                    b2.HasOne("ODataEntityFrameworkSample.Models.Registry")
                                        .WithMany("Rules")
                                        .HasForeignKey("RuleId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });

                    b.OwnsMany("ODataEntityFrameworkSample.Models.Student", "Students", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Name");

                            b1.Property<string>("Power");

                            b1.Property<int>("SchoolId");

                            b1.HasKey("Id");

                            b1.HasIndex("SchoolId");

                            b1.ToTable("Student");

                            b1.HasOne("ODataEntityFrameworkSample.Models.School")
                                .WithMany("Students")
                                .HasForeignKey("SchoolId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ODataEntityFrameworkSample.Models.University", b =>
                {
                    b.OwnsMany("ODataEntityFrameworkSample.Models.Person", "People", b1 =>
                        {
                            b1.Property<string>("Name");

                            b1.Property<string>("SurName");

                            b1.Property<int>("Role");

                            b1.Property<string>("Field");

                            b1.Property<int>("UniversityId");

                            b1.HasKey("Name", "SurName", "Role");

                            b1.HasIndex("UniversityId");

                            b1.ToTable("Person");

                            b1.HasOne("ODataEntityFrameworkSample.Models.University")
                                .WithMany("People")
                                .HasForeignKey("UniversityId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
