<Project>
  
  <PropertyGroup>
    <TargetFrameworks>net472;netstandard2.0;netstandard2.1;netcoreapp3.1;net5.0</TargetFrameworks>
    <LangVersion>9.0</LangVersion>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>1591</NoWarn>	
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>

    <PackageProjectUrl>https://github.com/ARKlab/Ark.Tools</PackageProjectUrl>
	
	<PackageLicenseExpression>MIT</PackageLicenseExpression>

    <PackageIcon>ark-dark.png</PackageIcon>
    <RepositoryUrl>https://github.com/ARKlab/Ark.Tools</RepositoryUrl>
      
    <Authors>ARK Labs</Authors>
    <Copyright>Copyright (C) 2018 ARK S.r.l</Copyright>

    <IncludeSymbols>True</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <PropertyGroup>
	  <!-- Optional: Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
	  <PublishRepositoryUrl>true</PublishRepositoryUrl>

	  <!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
	  <EmbedUntrackedSources>true</EmbedUntrackedSources>
	  
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
   
	<ItemGroup>
    <None Include="..\ark-dark.png" Pack="true" PackagePath="\"/>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All"/>
	</ItemGroup>

  <PropertyGroup>
    
    <ArkToolsCoreVersion>3.0.0</ArkToolsCoreVersion>
    <FtpClientGroupVersion>3.0.0</FtpClientGroupVersion>
    <ResourceWatcherGroupVersion>3.0.0</ResourceWatcherGroupVersion>
    
    <EntityFrameworkGroupVersion>3.0.0</EntityFrameworkGroupVersion>
    <RavenDbGroupVersion>3.0.0</RavenDbGroupVersion>
    
    <AspNetCoreGroupVersion>3.0.0</AspNetCoreGroupVersion>
    <EventSourcingGroupVersion>3.0.0</EventSourcingGroupVersion> <!--depends from ArkToolsCore Only -->

    <!-- Groups SUFFIX -->
    <ArkToolsCoreVersionSuffix>beta01</ArkToolsCoreVersionSuffix>
    <FtpClientGroupVersionSuffix>beta01</FtpClientGroupVersionSuffix>
    <ResourceWatcherGroupVersionSuffix>beta01</ResourceWatcherGroupVersionSuffix>

    <EntityFrameworkGroupVersionSuffix>beta01</EntityFrameworkGroupVersionSuffix>
    <RavenDbGroupVersionSuffix>beta01</RavenDbGroupVersionSuffix>

    <AspNetCoreGroupVersionSuffix>beta02</AspNetCoreGroupVersionSuffix>

    <EventSourcingGroupVersionSuffix>beta01</EventSourcingGroupVersionSuffix>

</PropertyGroup>
  
  <Target Name="PushNugetPackage" AfterTargets="Pack" Condition="('$(Configuration)' == 'Release' And $(VersionSuffix) == '') Or ('$(Configuration)' == 'Debug' And $(VersionSuffix) != '')">
    <Exec Command="dotnet nuget push -s https://api.nuget.org/v3/index.json $(MSBuildProjectDirectory)\$(OutputPath)$(PackageId).$(PackageVersion).nupkg" />
    <!--<Exec Command="dotnet nuget push -s https://nuget.smbsrc.net/ $(MSBuildProjectDirectory)\$(OutputPath)$(PackageId).$(PackageVersion).symbols.nupkg" />-->
  </Target>
	
	<Target Name="_ResolvePublishNuGetPackagePdbsAndXml"
			AfterTargets="RunResolvePublishAssemblies">
		<ItemGroup>
			<ResolvedFileToPublish 
			Include="@(ResolvedAssembliesToPublish->'%(RootDir)%(Directory)%(Filename).pdb')" 
			RelativePath="$([System.IO.Path]::ChangeExtension(%(ResolvedAssembliesToPublish.DestinationSubPath), '.pdb'))"
			DestinationSubPath="$([System.IO.Path]::ChangeExtension(%(ResolvedAssembliesToPublish.DestinationSubPath), '.pdb'))"
			Condition="'%(ResolvedAssembliesToPublish.PackageName)' != ''
						and Exists('%(RootDir)%(Directory)%(Filename).pdb')" />
			<ResolvedFileToPublish 
			Include="@(ResolvedAssembliesToPublish->'%(RootDir)%(Directory)%(Filename).xml')" 
			RelativePath="$([System.IO.Path]::ChangeExtension(%(ResolvedAssembliesToPublish.DestinationSubPath), '.xml'))"
			DestinationSubPath="$([System.IO.Path]::ChangeExtension(%(ResolvedAssembliesToPublish.DestinationSubPath), '.xml'))"
			Condition="'%(ResolvedAssembliesToPublish.PackageName)' != ''
						and Exists('%(RootDir)%(Directory)%(Filename).xml')" />
		</ItemGroup>
	</Target>
	

  <PropertyGroup>
	<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
		<BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
    </ItemGroup>
  </Target>

</Project>